:root {
  --soft-violet: hsl(273, 75%, 66%);
  --soft-blue: hsl(240, 73%, 65%);
  --white: #ffffff;
  --very-dark-desaturated-blue: hsl(238, 29%, 16%);
  --very-dark-grayish-blue: hsl(
    237,
    12%,
    33%
  );

  --dark-grayish-blue: hsl(240, 6%, 50%);
  --light-grayish-blue: hsl(240, 5%, 91%);
  --soft-red: hsl(14, 88%, 65%);

  --image-offset: 100px;
}

* {
  box-sizing: border-box;
}

body {
  font-family: 'Kumbh Sans', sans-serif;
  min-height: 100vh;
  background-image: linear-gradient(to bottom, var(--soft-violet), var(--soft-blue));
  padding: 3rem 1.5rem;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

@media screen and (min-width: 1080px) {
  body::after {
    content: '';
    display: block;
    background-image: url(../images/illustration-box-desktop.svg);
    background-repeat: no-repeat;
    position: fixed;
    width: 200px;
    height: 200px;
    z-index: 100;
    top: 50%;
    left: 50%;

    /*
     * Sabemos que el ancho máximo del .main-container es de 920px, por lo que
     * para dejar la caja siempre en su borde, solamente tenemos que darle una
     * posición fija, posicionarlo con left al 50% y con transform desplazarlo
     * a la izquierda otro 50% (lo cual lo dejaría justo en el medio de la
     * pantalla) y restarle la mitad de lo que ocupa el .main-container (que es
     * 920px / 2 = 460). De esta manera lo fijamos siempre al borde del
     * .main-container.
    */
    transform: translate(calc(-50% - 460px), calc(-50% + 30px));
  }
}

body, h1, h2, ul, p, figure {
  margin: 0;
}

ul {
  list-style-type: none;
  padding: 0;
}

.main-container {
  background-color: var(--white);
  border-radius: 23px;
  padding: 0 1.5rem 3rem 1.5rem;
  margin-top: var(--image-offset);
}

@media screen and (min-width: 1080px) {
  .main-container {
    display: flex;
    align-items: center;
    padding: 4rem 6rem 4rem 0;
    background-image: url(../images/bg-pattern-desktop.svg);
    background-repeat: no-repeat;
    background-size: 964px 944px;
    background-position-x: -600px;
    background-position-y: -315px;
    overflow: hidden;
    max-width: 920px;
    margin: 0 auto;
  }
}

@media screen and (max-width: 1080px) {
  .image-container {
    margin-top: calc(var(--image-offset) * -1);
    margin-bottom: 60px;
  }
}

.image-container {
  width: 100%;
  display: inline-block;
  position: relative;
  text-align: center;
}

@media screen and (max-width: 1080px) {
  .image-container::after {
    bottom: -70px;
    width: 240px;
    height: 145px;
  }
}

.image-container::after {
  content: '';
  display: block;
  background-repeat: no-repeat;
  background-image: url(../images/bg-pattern-mobile.svg);
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@media screen and (max-width: 1080px) {
  .image-container .image {
    max-height: 180px;
    width: 236px;
    height: 179px;
  }
}

.image-container .image {
  
}

@media screen and (min-width: 1080px) {
  .image-container .image {
    transform: translateX(-75px);
    width: 471px;
  }
}

@media screen and (max-width: 1080px) {
  .main-title {
    text-align: center;
  }
}

.main-title {
  font-size: 2rem;
  margin-bottom: 1.75rem;
}

.accordion {
  font-size: 13px;
}

.accordion-item-container {
  border-bottom: 1px solid #eeeeee;
}

.accordion-item {
  padding: 1rem 0 0;
}

.accordion-question {
  font-size: var(--font-size);
  font-weight: 400;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.accordion-question::after {
  content: url(../images/icon-arrow-down.svg);
  transition: transform .2s;
}

.accordion-question.content-is-shown::after {
  transform: rotateZ(180deg);
}

.collapsible {
  --max-height: 0;

  max-height: var(--max-height);
  overflow: hidden;
  transition: max-height .2s;
}

.collapsible-text {
  line-height: 18px;
  color: var(--dark-grayish-blue);
  margin-bottom: 1rem;
}
